package challenges;

import java.util.Random;
import java.util.HashMap;



public class Alpha extends lesson.Solution{

	public int solution(int[] A) {
		int lastNewPosition = 0;
		HashMap<Integer,Boolean> values = new HashMap<Integer,Boolean>();
		for (int i = 0; i<A.length; ++i) {
			Integer key = A[i];
			if (!values.getOrDefault(key, false)) {
				values.put(key, true);
				lastNewPosition = i;
			}
		}
	        // write your code in Java SE 8
		return lastNewPosition;
	}
	
	public static void main(String[] args) {
		Alpha s = new Alpha();
		int[] A = {
				2,2,1,0,1
		};
		int[] B = {
				4, 1, 3, 1, 2, 6, 5, 8
		};
		
		int[] C = {
				4, 3, 2, 6, 5, 8
		};
		
		int j = 10000; int N = 10000000;
		int[] D = new int[j];
		Random rnd = new Random();
		for (int i = 0; i < j; ++i) {
			D[i] = rnd.nextInt(N) + 1;
		}
		
		shuffleArray(D);
		D[900] = 1;
//		System.out.print("[ " + D[0]);
//		for (int i = 1; i < D.length; ++i) 
//			System.out.print(", " + D[i]);
//		System.out.println(" ]");
		
		System.out.println("Soln A: " + ToString(s.solution(A)));
		System.out.println("Soln B: " + ToString(s.solution(B)));
		System.out.println("Soln C: " + ToString(s.solution(C)));
		System.out.println("Soln D: " + ToString(s.solution(D)));
		System.out.println(ToString(D));
//		System.out.println("Soln D: " + ToString(s.solution(5, D));
//		System.out.println(s);
	}

}
